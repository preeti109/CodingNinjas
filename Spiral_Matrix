class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int column = matrix[0].size();
        int count = 0;
        int total = row*column;
        int startingRow = 0;
        int startingColumn = 0;
        int endingRow = row-1;
        int endingColumn = column-1;
        vector<int> ans;

        while(count < total) {
            for(int i=startingColumn; count < total && i<=endingColumn; i++) {
                ans.push_back(matrix[startingRow][i]);
                count++;
            }
            startingRow++;
            for(int i=startingRow; count < total && i<=endingRow; i++) {
                ans.push_back(matrix[i][endingColumn]);
                count++;
            }
            endingColumn--;
            for(int i=endingColumn; count < total && i>=startingColumn; i--) {
                ans.push_back(matrix[endingRow][i]);
                count++;
            }
            endingRow--;
            for(int i=endingRow; count < total && i>=startingRow; i--) {
                ans.push_back(matrix[i][startingColumn]);
                count++;
            }
            startingColumn++;
        }
        return ans;
    }
};
