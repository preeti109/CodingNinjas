/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     if (head == NULL || k == 0) 
         return head;

     Node* tail = head;
     int length = 1;

     while(tail->next != NULL) {
          length++;
          tail = tail->next;
     }

     if(k % length == 0)
         return head;

     k = k % length;    
     tail->next = head;
     Node* newTail = head;
     int z = length-k;

     while(z > 1) {
          newTail = newTail->next;
          z--;
     }
     
     Node* newHead = newTail->next; 
     newTail->next = NULL;
     return newHead;
}
